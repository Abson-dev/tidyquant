eventdata <- xts(value, order.by = time_index)
eventdata
eventdata %>% as_tibble(preserve_row_names = T)
eventdata %>% as_tibble(preserve_row_names = T) %>% mutate(row.names = lubridate::ymd_hms(row.names))
eventdata %>% as_tibble(preserve_row_names = T) %>% dplyr::mutate(row.names = lubridate::ymd_hms(row.names))
eventdata %>% as_tibble(preserve_row_names = T) %>% dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%str()
?POSIXct
?Date
?dtt,
?dttm
?datetime
?lubridate
eventdata %>% as_tibble(preserve_row_names = T) %>% dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%str()
document()
eventdata %>% as_tibble(preserve_row_names = T) %>% dplyr::mutate(row.names = as.character(lubridate::ymd_hms(row.names)))
eventdata %>% as_tibble(preserve_row_names = T) %>% dplyr::mutate(row.names = as.character(lubridate::ymd_hms(row.names))) %>% find_datetime_cols()
eventdata %>% as_tibble(preserve_row_names = T) %>% dplyr::mutate(row.names = as.character(lubridate::ymd_hms(row.names))) %>% find_date_cols()
document()
eventdata %>% as_tibble(preserve_row_names = T) %>% dplyr::mutate(row.names = as.character(lubridate::ymd_hms(row.names))) %>% find_datetime_cols()
eventdata %>% as_tibble(preserve_row_names = T) %>% dplyr::mutate(row.names = as.character(lubridate::ymd_hms(row.names))) %>% find_date_cols()
time_index <- seq(from = as.POSIXct("2012-05-15 07:00"),
to = as.POSIXct("2012-05-17 18:00"), by = "hour")
set.seed(1)
value <- rnorm(n = length(time_index))
eventdata <- xts(value, order.by = time_index)
eventdata
eventdata %>%
as_tibble(preserve_row_names = T) %>%
#dplyr::mutate(row.names = as.character(lubridate::ymd_hms(row.names))) %>%
find_datetime_cols()
document()
document()
document()
?to.period
eventdata %>%
as_tibble(preserve_row_names = T) %>%
tq_transform_xy(.x = V1, transform_fun = "to.period", period = "months")
eventdata %>%
as_tibble(preserve_row_names = T)
tq_transform_fun_options()
tq_transform_fun_options() %>%
unlist()
eventdata %>%
as_tibble(preserve_row_names = T) %>%
tq_transform_xy(.x = V1, transform_fun = "to.period", period = "months")
tq_transform_fun_options() %>%
unlist()
stop(paste0("transform_fun = '",
transform_fun,
"' not a valid option."))
transform_fun = "to.period"
fun_options <- tq_transform_fun_options() %>%
unlist()
if (!(transform_fun %in% fun_options)) {
stop(paste0("transform_fun = '",
transform_fun,
"' not a valid option."))
}
eventdata %>%
as_tibble(preserve_row_names = T) %>%
tq_transform_xy(.x = V1, transform_fun = to.period, period = "months")
document()
eventdata %>%
as_tibble(preserve_row_names = T) %>%
tq_transform_xy(.x = V1, transform_fun = to.period, period = "months")
devtools::load_all(".")
eventdata %>%
as_tibble(preserve_row_names = T) %>%
tq_transform_xy(.x = V1, transform_fun = to.period, period = "months")
eventdata %>%
as_tibble(preserve_row_names = T)
eventdata %>%
as_tibble(preserve_row_names = T) %>%
#tq_transform_xy(.x = V1, transform_fun = to.period, period = "months")
find_datetime_cols()
devtools::load_all(".")
eventdata %>%
as_tibble(preserve_row_names = T) %>%
#tq_transform_xy(.x = V1, transform_fun = to.period, period = "months")
find_datetime_cols()
eventdata %>%
as_tibble(preserve_row_names = T) %>%
#tq_transform_xy(.x = V1, transform_fun = to.period, period = "months")
find_date_time_cols()
eventdata %>%
as_tibble(preserve_row_names = T) %>%
tq_transform_xy(.x = V1, transform_fun = to.period, period = "months")
eventdata %>%
as_tibble(preserve_row_names = T) %>%
#tq_transform_xy(.x = V1, transform_fun = to.period, period = "months")
find_datetime_cols()
eventdata %>%
as_tibble(preserve_row_names = T) %>%
#tq_transform_xy(.x = V1, transform_fun = to.period, period = "months")
find_date_time_cols()
eventdata %>%
as_tibble(preserve_row_names = T) %>%
tq_transform_xy(.x = V1, transform_fun = to.period, period = "months")
devtools::load_all(".")
eventdata %>%
as_tibble(preserve_row_names = T) %>%
tq_transform_xy(.x = V1, transform_fun = to.period, period = "months")
eventdata %>%
as_tibble(preserve_row_names = T) %>%
mutate(row.names = lubridate::ymd_hms(row.names))
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names))
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_transform_xy(.x = V1, transform_fun = to.period, period = "months")
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_transform_xy(.x = V1, transform_fun = to.period, period = "days")
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_transform_xy(.x = V1, transform_fun = to.period, period = "days", OHLC = F)
AAPL <- ta_get("AAPL")
AAPL <- tq_get("AAPL")
AAPL %>%
tq_mutate(Cl, MACD) %>%
tq_mutate(HLC, BBands) %>%
tq_mutate(OHLC, OpCl)
test()
AAPL_macd <- "AAPL" %>%
tq_get() %>%
tq_transform(Op, MACD)
FANG <- tibble::tibble(stock.symbol = c("FB", "AMZN", "NFLX", "GOOG")) %>%
dplyr::mutate(stock.prices = purrr::map(stock.symbol, tq_get))
FANG
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_mutate_xy(.x = V1, mutate_fun = MACD)
devtools::load_all(".")
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_mutate_xy(.x = V1, mutate_fun = MACD)
devtools::load_all(".")
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_mutate_xy(.x = V1, mutate_fun = MACD)
devtools::load_all(".")
devtools::load_all(".")
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_mutate_xy(.x = V1, mutate_fun = MACD)
devtools::load_all(".")
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_mutate_xy(.x = V1, mutate_fun = MACD)
devtools::load_all(".")
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_mutate_xy(.x = V1, mutate_fun = MACD)
AAPL %>%
tq_mutate(Cl, MACD) %>%
tq_mutate(HLC, BBands) %>%
tq_mutate(OHLC, OpCl)
AAPL %>%
tq_mutate_xy(close, MACD)
AAPL
AAPL %>%
tq_mutate_xy_(close, mutate_fun = MACD)
AAPL %>%
tq_mutate_xy(close, mutate_fun = MACD)
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names))
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_mutate_xy(.x = V1, mutate_fun = MACD)
devtools::load_all(".")
AAPL %>%
tq_mutate_xy(close, mutate_fun = MACD)
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_mutate_xy(.x = V1, mutate_fun = MACD)
col_name_date_and_date_time <- function(data) {
date_cols <- find_date_cols(data)
date_cols <- date_cols[date_cols == TRUE]
if (length(date_cols) == 0) {
date_cols <- find_date_time_cols(data)
date_cols <- date_cols[date_cols == TRUE]
if (length(date_cols) == 0) {
stop("No date or POSIXct column found in `data`.")
}
}
date_col_name <- names(date_cols)[[1]]
date_col_name
}
col_name_date_and_date_time(AAPL)
devtools::load_all(".")
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_mutate_xy(.x = V1, mutate_fun = MACD)
devtools::load_all(".")
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_mutate_xy(.x = V1, mutate_fun = MACD)
devtools::load_all(".")
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_mutate_xy(.x = V1, mutate_fun = MACD)
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_mutate_xy(.x = V1, mutate_fun = MACD) ->merger
merger
merge(merger[[1]], merger[[2]])
merge(merger[[1]], merger[[2]], by.x = names(merger[[1]])[[1]], by.y = names(merger[[2]])[[1]])
names(merger[[1]])[[1]]
names(merger[[2]])[[1]]
?merge
merge(merger[[1]], merger[[2]], by.x = row.names, by.y = date)
merge(merger[[1]], merger[[2]], by.x = "row.names", by.y = "date")
meger[[1]]
merger[[1]]
dplyr::left_join(merger[[1]], merger[[2]])
dplyr::left_join(merger[[1]], merger[[2]], by = c("rownames", "date"))
dplyr::left_join(merger[[1]], merger[[2]], by = c("row.names", "date"))
?left_join
dplyr::left_join(merger[[1]], merger[[2]], by = c("row.names" = "date"))
devtools::load_all(".")
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_mutate_xy(.x = V1, mutate_fun = MACD)
devtools::load_all(".")
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_mutate_xy(.x = V1, mutate_fun = MACD)
devtools::load_all(".")
devtools::load_all(".")
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_mutate_xy(.x = V1, mutate_fun = MACD)
AAPL %>%
tq_mutate_xy(close, mutate_fun = MACD)
devtools::load_all(".")
AAPL %>%
tq_mutate_xy(close, mutate_fun = MACD)
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_mutate_xy(.x = V1, mutate_fun = MACD)
devtools::load_all(".")
AAPL %>%
tq_mutate(Cl, MACD) %>%
tq_mutate(HLC, BBands) %>%
tq_mutate(OHLC, OpCl)
AAPL %>%
tq_mutate_xy(close, mutate_fun = MACD)
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_transform_xy(.x = V1, transform_fun = to.period, period = "days", OHLC = F)
devtools::load_all(".")
AAPL %>%
tq_mutate_xy(close, mutate_fun = MACD)
devtools::load_all(".")
AAPL %>%
tq_mutate_xy(close, mutate_fun = MACD)
devtools::load_all(".")
AAPL %>%
tq_mutate_xy(close, mutate_fun = MACD)
devtools::load_all(".")
AAPL %>%
tq_mutate_xy(close, mutate_fun = MACD)
"close" %in% names(AAPL)
AAPL %>%
tq_transform_xy(close, mutate_fun = MACD)
AAPL %>%
tq_transform_xy(close, transform_fun = MACD)
devtools::load_all(".")
AAPL %>%
tq_transform_xy(close, transform_fun = MACD)
devtools::load_all(".")
AAPL %>%
tq_transform_xy(close, transform_fun = MACD)
AAPL %>%
tq_mutate_xy(close, mutate_fun = MACD)
AAPL %>%
tq_mutate_xy(close, mutate_fun = MACD)
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names))
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_mutate_xy(.x = V1, mutate_fun = MACD)
AAPL <- tq_get("AAPL", get = "stock.prices", from = "2010-01-01", to = "2015-01-01")
AAPL
AAPL_transform <- AAPL %>%
tq_transform(x_fun = Cl, transform_fun = to.period, period = "monthly")
AAPL_transform <- AAPL %>%
tq_transform(x_fun = Cl, transform_fun = to.period, period = "months")
AAPL_transform
AAPL_transform <- AAPL %>%
tq_transform(x_fun = Cl, transform_fun = to.period, period = "months", OHLC = FALSE)
AAPL_transform <- AAPL %>%
tq_transform(x_fun = Cl, transform_fun = to.period, period = "months", OHLC = FALSE)
AAPL_transform
?EVWMA
AAPL_transform_xy <- AAPL %>%
AAPL_transform_xy(.x = close, .y = volume, transform_fun = EVWMA)
AAPL_transform_xy <- AAPL %>%
tq_transform_xy(.x = close, .y = volume, transform_fun = EVWMA)
AAPL_transform_xy
tq_get("FB") %>%
tq_transform(x_fun = OHLCV, transform_fun = to.monthly)
devtools::load_all(".")
tq_get("FB") %>%
tq_transform(x_fun = OHLCV, transform_fun = to.monthly)
devtools::load_all(".")
AAPL %>% coerce_to_tibble()
tq_get("FB") %>%
tq_transform(x_fun = OHLCV, transform_fun = to.monthly)
devtools::load_all(".")
tq_get("FB") %>%
tq_transform(x_fun = OHLCV, transform_fun = to.monthly)
devtools::load_all(".")
tq_get("FB") %>%
tq_transform(x_fun = OHLCV, transform_fun = to.monthly)
FB_monthly <- tq_get("FB") %>%
tq_transform(x_fun = OHLCV, transform_fun = to.monthly)
FB_monthly
FB_monthly %>% coerce_to_tibble()
devtools::load_all(".")
FB_monthly %>% coerce_to_tibble()
FB_monthly %>% coerce_to_tibble() -> x
x
convert_date_cols(x)
devtools::load_all(".")
convert_date_cols(x)
FB_monthly <- tq_get("FB") %>%
tq_transform(x_fun = OHLCV, transform_fun = to.monthly)
FB_monthly
FB_monthly <- tq_get("FB") %>%
tq_transform(x_fun = OHLCV, transform_fun = to.monthly, OHLC = F)
FB_monthly
devtools::load_all(".")
FB_monthly <- tq_get("FB") %>%
tq_transform(x_fun = OHLCV, transform_fun = to.monthly, OHLC = F)
FB_monthly <- tq_get("FB") %>%
tq_transform(x_fun = OHLCV, transform_fun = to.monthly)
FB_transform_no_date_col("FB") %>%
tq_transform(x_fun = OHLCV, transform_fun = to.monthly)
FB <-  tq_get("FB", get = "stock.prices", from = "2010-01-01", to = "2015-01-01")
FB_transform_no_date_col <- FB %>%
tq_transform(x_fun = OHLCV, transform_fun = to.monthly)
AAPL_transform_xy_ <- AAPL %>%
tq_transform_xy_(.x = "close", .y = "volume", transform_fun = "EVWMA")
AAPL_transform_xy <- AAPL %>%
tq_transform_xy(.x = close, .y = volume, transform_fun = EVWMA)
devtools::load_all(".")
AAPL_transform_xy <- AAPL %>%
tq_transform_xy(.x = close, .y = volume, transform_fun = EVWMA)
AAPL_transform_xy
FB_transform_no_date_col <- FB %>%
tq_transform(x_fun = OHLCV, transform_fun = to.monthly)
AAPL <- tq_get("AAPL", get = "stock.prices", from = "2010-01-01", to = "2015-01-01")
FB <-  tq_get("FB", get = "stock.prices", from = "2010-01-01", to = "2015-01-01")
AAPL_transform <- AAPL %>%
tq_transform(x_fun = Cl, transform_fun = to.period, period = "months", OHLC = FALSE)
AAPL_transform_xy <- AAPL %>%
tq_transform_xy(.x = close, .y = volume, transform_fun = EVWMA)
AAPL_transform_xy_ <- AAPL %>%
tq_transform_xy_(.x = "close", .y = "volume", transform_fun = "EVWMA")
FB_transform_no_date_col <- FB %>%
tq_transform(x_fun = OHLCV, transform_fun = to.monthly)
AAPL <- tq_get("AAPL", get = "stock.prices", from = "2010-01-01", to = "2015-01-01")
FB <-  tq_get("FB", get = "stock.prices", from = "2010-01-01", to = "2015-01-01")
AAPL_transform <- AAPL %>%
tq_transform(x_fun = Cl, transform_fun = to.period, period = "months", OHLC = FALSE)
AAPL_transform_xy <- AAPL %>%
tq_transform_xy(.x = close, .y = volume, transform_fun = EVWMA)
AAPL_transform_xy_ <- AAPL %>%
tq_transform_xy_(.x = "close", .y = "volume", transform_fun = "EVWMA")
FB_transform_no_date_col <- FB %>%
tq_transform(x_fun = OHLCV, transform_fun = to.monthly)
time_index <- seq(from = as.POSIXct("2012-05-15 07:00"),
to = as.POSIXct("2012-05-17 18:00"),
by = "hour")
set.seed(1)
value <- rnorm(n = length(time_index))
eventdata <- xts(value, order.by = time_index)
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_transform_xy(.x = V1, transform_fun = to.period, period = "days", OHLC = F)
eventdata %>%
as_tibble(preserve_row_names = T) %>%
dplyr::mutate(row.names = lubridate::ymd_hms(row.names)) %>%
tq_mutate_xy(.x = V1, mutate_fun = MACD)
AAPL %>%
tq_mutate(Cl, MACD) %>%
tq_mutate(HLC, BBands) %>%
tq_mutate(OHLC, OpCl)
AAPL %>%
tq_mutate(Cl, MACD)
AAPL %>%
tq_mutate(Cl, MACD) %>%
tq_mutate(HLC, BBands)
AAPL %>%
tq_mutate(Cl, MACD) %>%
tq_mutate(HLC, BBands) %>%
tq_mutate(OHLC, OpCl)
devtools::load_all(".")
AAPL %>%
tq_mutate(Cl, MACD) %>%
tq_mutate(HLC, BBands) %>%
tq_mutate(OHLC, OpCl)
AAPL %>%
tq_mutate(Cl, MACD) %>%
tq_mutate(HLC, BBands)
AAPL %>%
AAPL %>%
tq_mutate(Cl, MACD) %>%
tq_mutate(HLC, BBands) %>%
tq_mutate(OHLC, OpCl)
tq_mutate(AAPL, OHLC, OpCl)
tq_mutate(AAPL, OHLC, OpCl, OHLC =T)
tq_transform(AAPL, OHLC, OpCl, OHLC =T)
tq_transform(AAPL, fun_x = OHLC, OpCl, OHLC =T)
tq_transform(AAPL, fun_x = OHLC, tranform_fun = OpCl, OHLC =T)
tq_transform(AAPL, fun_x = OHLC, transform_fun = OpCl, OHLC =T)
tq_transform(AAPL, x_fun = OHLC, transform_fun = OpCl, OHLC =T)
OHLC(AAPL)
fun_x
tq_transform(AAPL, x_fun = OHLC, transform_fun = OpCl, OHLC =T)
fun_x = OpCl
eval(parse(text = fun_x))
fun_x = "OpCl"
eval(parse(text = fun_x))
f <- eval(parse(text = fun_x))
f(AAPL)
?OpCl
AAPL %>%
tq_mutate(Cl, MACD) %>%
tq_mutate(HLC, BBands) %>%
tq_mutate(OC, OpCl)
AAPL %>%
tq_mutate(Cl, MACD) %>%
tq_mutate(HLC, BBands)
AAPL %>%
tq_mutate(Cl, MACD) %>%
tq_mutate(HLC, BBands) %>%
tq_mutate(OHLC, OpCl)
x_fun <- "OHLC"
transform_fun <- "OpCl"
data <- AAPL
OHLC <- FALSE
check_transform_fun_options(transform_fun)
check_x_fun_options(x_fun)
check_data_is_data_frame(data)
date_col_name <- get_col_name_date_or_date_time(data)
fun_x <- eval(parse(text = x_fun))
fun_transform <- eval(parse(text = transform_fun))
data %>%
as_xts_(date_col = date_col_name) %>%
fun_x() %>%
fun_transform(OHLC)
fun_x
eval(parse(text = x_fun))
x_fun
x_fun = "OHLCV"
eval(parse(text = x_fun))
x_fun = "OHLC"
eval(parse(text = x_fun))
x_fun = "quantmod::OHLC"
eval(parse(text = x_fun))
AAPL %>%
tq_mutate(Cl, MACD) %>%
tq_mutate(HLC, BBands) %>%
tq_mutate(OHLC, OpCl)
x_fun <- "OHLC"
eval(parse(text = x_fun))
x_fun <- paste0("quantmod::", x_fun)
fun_x <- eval(parse(text = x_fun))
fun_x
devtools::load_all(".")
AAPL %>%
tq_mutate(Cl, MACD) %>%
tq_mutate(HLC, BBands) %>%
tq_mutate(OHLC, OpCl)
devtools::load_all(".")
devtools::load_all(".")
AAPL %>%
tq_mutate(Cl, MACD) %>%
tq_mutate(HLC, BBands) %>%
tq_mutate(OHLC, OpCl)
devtools::load_all(".")
AAPL %>%
tq_mutate(Cl, MACD) %>%
tq_mutate(HLC, BBands) %>%
tq_mutate(OHLC, OpCl)
