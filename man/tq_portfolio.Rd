% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tq_portfolio.R
\name{tq_portfolio}
\alias{tq_portfolio}
\alias{tq_portfolio_}
\title{Aggregates a group of returns by security into portfolio returns}
\usage{
tq_portfolio(data, assets_col, returns_col, weights = NULL,
  col_rename = NULL, ...)

tq_portfolio_(data, assets_col, returns_col, weights = NULL,
  col_rename = NULL, ...)
}
\arguments{
\item{data}{A \code{tibble} (tidy data frame) of returns in tidy format (i.e long format).}

\item{assets_col}{The column with assets (securities)}

\item{returns_col}{The column with returns}

\item{weights}{Optional parameter for the security weights, which can be passed as a numeric vector the length of
the number of securities or a two column tibble with security names in first column
and weights in second column.}

\item{col_rename}{A string or character vector containing names that can be used
to quickly rename columns.}

\item{...}{Additional parameters passed to \code{PerformanceAnalytics::Returns.portfolio}}
}
\value{
Returns data in the form of a \code{tibble} object.
}
\description{
Aggregates a group of returns by security into portfolio returns
}
\details{
\code{tq_portfolio} is a wrapper for \code{PerformanceAnalytics::Returns.portfolio},
The main advantage is the results are returned as a \code{tibble} and the
function can be used with the \code{tidyverse}.

\code{assets_col} and \code{returns_col} are columns within \code{data} that are used
to compute returns for a portfolio. The columns should be in "long" format (or "tidy" format)
meaning there is only one column containing all of the securities (i.e. not in "wide" format
with returns spread by security).

\code{weights} are the weights to be applied to the security returns.
Weights can be input in one of two options:
\itemize{
  \item A numeric vector of weights that is the same length as unique number of securities.
  The weights are applied in the order of the securities.
  \item A two column tibble with securities in the first column and weights in the second column.
  The advantage to this method is the weights are mapped to the securities and any unlisted
  securities default to a weight of zero.
}
}
\examples{
# Load libraries
library(tidyquant)

# Get stock prices
stock_prices <- c("AAPL", "GOOG", "NFLX") \%>\%
    tq_get(get  = "stock.prices",
           from = "2010-01-01",
           to   = "2015-12-31")

# Get returns for individual stock components
portfolio_monthly_returns <- stock_prices \%>\%
    group_by(symbol) \%>\%
    tq_transform(Ad, periodReturn, period = "monthly")

# Method 1: Use tq_portfolio with numeric vector of weights
weights = c(0.5, 0, 0.5)
tq_portfolio(data = portfolio_monthly_returns,
             assets_col = symbol,
             returns_col = monthly.returns,
             weights = weights,
             col_rename = NULL,
             wealth.index = FALSE)

# Method 2: Use tq_portfolio with two column tibble and map weights
# Note that GOOG's weighting is zero in Method 1. In Method 2,
# GOOG is not added and same result is achieved.
weights_df <- tibble(symbol = c("AAPL", "NFLX"),
                     weights = c(0.5, 0.5))
tq_portfolio(data = portfolio_monthly_returns,
             assets_col = symbol,
             returns_col = monthly.returns,
             weights = weights_df,
             col_rename = NULL,
             wealth.index = FALSE)
}
\seealso{
\itemize{
  \item \code{\link{tq_transform}} which can be used to get period returns.
  \item \code{\link[PerformanceAnalytics]{Return.portfolio}} which is the underlying function
  that specifies which parameters can be passed via \code{...}
}
}
